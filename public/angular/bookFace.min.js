(function(){angular.module("bookFaceApp",["ngRoute","ngSanitize","ui.bootstrap"]);function e(e,o){e.when("/",{templateUrl:"home/home.view.html",controller:"homeCtrl",controllerAs:"vm"}).when("/about",{templateUrl:"/common/views/genericText.view.html",controller:"aboutCtrl",controllerAs:"vm"}).when("/book/:bookid",{templateUrl:"/bookDetail/bookDetail.view.html",controller:"bookDetailCtrl",controllerAs:"vm"}).otherwise({redirectTo:"/"});o.html5Mode(true)}angular.module("bookFaceApp").config(["$routeProvider","$locationProvider",e])})();(function(){angular.module("bookFaceApp").controller("homeCtrl",e);e.$inject=["$scope","bookFaceData"];function e(e,o){var t=this;t.pageHeader={title:"bookFace",strapline:"Welcome to your favorite books!"};t.sidebar={content:"Looking for something to read? BookFace helps you find books to read easly!"};o.bookList().success(function(e){t.data={books:e};console.log(t.data)}).error(function(e){t.message="Sorry, something's gone wrong"});t.showError=function(o){e.$apply(function(){t.message=o.message})}}})();(function(){angular.module("bookFaceApp").controller("aboutCtrl",e);function e(){var e=this;e.pageHeader={title:"About bookFace"};e.main={content:"Enterprise-computing\nEnterprise computing, coursework 3 BookFace\n\nOverview\n\nThis coursework covers the development of an enterprise level application\n using a Javascript based framework (or similar technology). The coursework is designed to give students hands on experience with building enterprise applications. Furthermore, all the technologies used are production grade, giving students the experience and knowledge they need to build a real enterprise application. \n\nScenario\n\nYou have been asked to develop Bookface, a social networking site for people who love reading, and always have their face in a book. The site will allow avid readers to comment on their favourite books, rate books, and to read the comments made by others on their favourite books, and other books by their favourite authors. Users must register before they can submit comments on a book and be authorised via email. Users should choose a screen name and they should supply an email address. \n\nThe site should list authors together with their books. Comments are made on books, not on authors. Users can add authors if they are not already there, and they can add books to authors. Your program should list their favourite books of a user and be able to see other members of the site who listed those books as being among their favourite books.\n\nYou can use any JavaScript based stack to complete this task but it must use Node.js"}}})();(function(){angular.module("bookFaceApp").controller("bookDetailCtrl",e);e.$inject=["$routeParams","$modal","bookFaceData"];function e(e,o,t){var r=this;r.bookid=e.bookid;t.bookById(r.bookid).success(function(e){r.data={book:e};r.pageHeader={title:r.data.book.title}}).error(function(e){console.log(e)});r.popupReviewForm=function(){var e=o.open({templateUrl:"/reviewModal/reviewModal.view.html",controller:"reviewModalCtrl as vm",resolve:{bookData:function(){return{bookid:r.bookid,bookTitle:r.data.book.title}}}})}}})();(function(){angular.module("bookFaceApp").controller("reviewModalCtrl",e);e.$inject=["$modalInstance","bookData"];function e(e,o){var t=this;t.bookData=o;t.onSubmit=function(){t.formError="";if(!t.formData.name||!t.formData.rating||!t.formData.reviewText){t.formError="All fields required, please try again";return false}else{console.log(t.formData);return false}};t.modal={cancel:function(){e.dismiss("cancel")}}}})();(function(){angular.module("bookFaceApp").service("bookFaceData",e);e.$inject=["$http"];function e(e){var o=function(){return e.get("/api/books")};var t=function(o){return e.get("/api/books/"+o)};return{bookList:o,bookById:t}}})();(function(){angular.module("bookFaceApp").filter("addHtmlLineBreaks",e);function e(){return function(e){var o=e.replace(/\n/g,"<br/>");return o}}})();(function(){angular.module("bookFaceApp").directive("ratingStars",e);function e(){return{restrict:"EA",scope:{thisRating:"=rating"},templateUrl:"/common/directives/ratingStars/ratingStars.template.html"}}})();(function(){angular.module("bookFaceApp").directive("navigation",e);function e(){return{restrict:"EA",templateUrl:"/common/directives/navigation/navigation.template.html"}}})();(function(){angular.module("bookFaceApp").directive("footerGeneric",e);function e(){return{restrict:"EA",templateUrl:"/common/directives/footerGeneric/footerGeneric.template.html"}}})();(function(){angular.module("bookFaceApp").directive("pageHeader",e);function e(){return{restrict:"EA",scope:{content:"=content"},templateUrl:"/common/directives/pageHeader/pageHeader.template.html"}}})();